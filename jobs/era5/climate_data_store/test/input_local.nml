! Info for SLURM job submission to give to run_script function in isca_tools/jasmin/run/base.py.
&slurm_info
   jobs_dir = '/Users/joshduffield/Documents/StAndrews/Isca/jobs/'                  ! Directory containing jobs on JASMIN
   script_path = 'era5/climate_data_store/get_data.py'  ! Path to python script within jobs_dir
   script_args =                                              ! Will set to the path to this file if blank
   job_name =                                                 ! Set to name of directory containing this file if blank
   time = '1:00:00'            ! Maximum wall time for your job in format `hh:mm:ss`
   n_tasks = 1                  ! Number of tasks to run (usually 1 for a single script).
   cpus_per_task = 1            ! How many CPUs to allocate per task.
   mem = 1                      ! Memory to allocate for the job in GB.
   partition = 'debug'          ! Specifies the partition for the job. Options are `standard`, `highres` and `debug`.
   qos =                        ! Set to same as partition if blank
   conda_env = 'myenv'          ! Name of the conda environment on JASMIN to use.
   account = 'global_ex'        ! Account to use for submitting jobs.
   exist_output_ok =            ! Whether to run script if console_output for `job_name` already exists
                                ! blank will just append number if output already exists.
/

&script_info
    out_dir = '/Users/joshduffield/Desktop/test'                                                      ! Where nd2 file saved
    dataset = 'derived-era5-pressure-levels-daily-statistics'                                    ! Copernicus dataset to use
    exist_ok = .true.              ! If output already exists, overwrite if .true. otherwise give error
    one_year_per_file = .true.      ! If true, will run different job for each year. Otherwise will run one job for all years.
    max_workers = 2                 ! Number of jobs to run simultaneously. Only relevant if one_year_per_file = .true.
/

! Give all info required for the request dictionary for the cds api client
&request
    product_type = 'reanalysis'
    variable = 'temperature'
    daily_statistic = 'daily_mean'
    frequency = '1_hourly'
    time_zone = 'utc+00:00'
    year = '1979:1982'
    month = 1,2                     ! Months to select, leave blank for all months (Jan is 1, Dec is 12)
    day =   1,2                     ! Days to select for each month and year, leave bank for all days (1st is 1)
    pressure_level = 500              ! Pressure level to get data on
/