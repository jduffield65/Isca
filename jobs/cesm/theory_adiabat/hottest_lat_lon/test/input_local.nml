! Info for SLURM job submission to give to run_script function in isca_tools/jasmin/run/base.py.
&slurm_info
   jobs_dir = '/Users/joshduffield/Documents/StAndrews/Isca/jobs/'                  ! Directory containing jobs on my mac
   script_path = 'cesm/theory_adiabat/hottest_lat_lon/save_info.py'  ! Path to python script within jobs_dir
   script_args =                                              ! Will set to the path to this file if blank
   job_name =                                                 ! Set to name of directory containing this file if blank
   time = '01:00:00'            ! Maximum wall time for your job in format `hh:mm:ss`
   n_tasks = 1                  ! Number of tasks to run (usually 1 for a single script).
   cpus_per_task = 1            ! How many CPUs to allocate per task.
   mem = 16                     ! Memory to allocate for the job in GB.
   partition = 'debug'          ! Specifies the partition for the job. Options are `standard`, `highres` and `debug`.
   qos =                        ! Set to same as partition if blank
   conda_env = 'myenv'          ! Name of the conda environment on JASMIN to use.
   account = 'global_ex'        ! Account to use for submitting jobs.
   exist_output_ok =            ! Whether to run script if console_output for `job_name` already exists
                                ! blank will just append number if output already exists.
/

&script_info
    out_dir =                   ! Where npz saved. Leave blank to set to directory containing this file
    out_name =                  ! Name of nd2 file within dir_out, leave blank to set to `output.nd2`
    exist_ok = .false.          ! If out_name already exists, overwrite if .true. otherwise give error
    archive_dir = '/Users/joshduffield/Documents/StAndrews/Isca/cesm/archive/test/'       ! Directory containing cesm experiments on my mac
    exp_name = 'test'           ! Name of experiment within archive_dir
    chunks_time =               ! Chunking info for less memory usage (leave empty to not chunk in given dimension)
    chunks_lat =                ! Chunking info for less memory usage (1 chunk per latitude as we do lat by lat comp)
    chunks_lon =                ! Chunking info for less memory usage
    load_parallel = .false.     ! Whether to use parallel processing when loading
    load_all_at_start = .true.  ! Whether to load entire data set at the start before calculations
    p_ft_approx_guess = 500     ! Approx FT pressure level to use in hPa
    p_surf_approx_guess = 1000  ! Approx surface pressure level to use in hPa
    surface =            ! Leave blank for saving separate data for ocean and land
    year_first =                ! First year of data to consider, leave blank for first year of data
    year_last =                 ! Last year of data to consider, leave blank for last year of data
    month_nh =                  ! Months to select for northern hemisphere, leave blank for all months (Jan is 1, Dec is 12)
    month_sh =                  ! Months to select for souther hemisphere, leave blank for the same as months_nh
    lat_min =                   ! leave None to consider all latitudes
    lat_max =
    lon_min =                   ! leave None to consider all longitudes
    lon_max =
    quant = 95          ! Collect quantile info at these quantiles
    quant_range_below = 0      ! For each quantile in quant, consider days with near-surface temp in quantile range quant-quant_range_below to quant+quant_range_above
    quant_range_above = 100        ! Leave blank to set to same as quant_range_below
/
